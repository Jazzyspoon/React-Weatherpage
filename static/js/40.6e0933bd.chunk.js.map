{"version":3,"file":"static/js/40.6e0933bd.chunk.js","mappings":"yMAMMA,EAAQ,WAGV,IAAQC,GAAgBC,EAAAA,EAAAA,MAAhBD,YAGFE,GAAsBC,EAAAA,EAAAA,SAAQ,WAChC,OAAKH,EAAYI,UAAaJ,EAAYK,UAKnC,CAAEC,IAFgBN,EAAYI,SAAW,IAEhBG,IADNP,EAAYK,UAAY,MAHvC,IAKf,EAAG,CAACL,EAAYI,SAAUJ,EAAYK,YAGhCG,GAAYL,EAAAA,EAAAA,SAAQ,WACtB,IAAKD,EACD,MAAO,GAEX,IAAQI,EAAaJ,EAAbI,IAAKC,EAAQL,EAARK,IACb,MAAM,2CAANE,OAAkDH,EAAG,SAAAG,OAAQF,EAAG,eAAAE,OAAcH,EAAG,eAAAG,OAAcF,EAAG,oNACtG,EAAG,CAACL,IAGJ,OAAKA,GAWDQ,EAAAA,EAAAA,MAAA,OAAKC,UAAU,wBAAuBC,SAAA,EAClCC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,aAAYC,SAAC,oBAC3BC,EAAAA,EAAAA,KAAA,UACIC,MAAM,gBACNC,GAAG,QACHC,IAAKR,EACLS,YAAY,IACZC,QAAQ,OACR,aAAW,sCAjBfL,EAAAA,EAAAA,KAACM,EAAAA,EAAc,CACXC,KAAK,SACLC,QAAQ,mBACRV,UAAU,iBAkB1B,EASA,EAN+B,WAAH,OACxBE,EAAAA,EAAAA,KAACS,EAAAA,EAAa,CAACC,UAAUV,EAAAA,EAAAA,KAAA,OAAKF,UAAU,kBAAiBC,UAACC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,2BAAgCA,UAC1FC,EAAAA,EAAAA,KAACd,EAAK,KACM,C","sources":["components/radar/radar.js"],"sourcesContent":["import React, { useMemo } from 'react';\nimport './radar.css';\nimport { useWeather } from '../../context/WeatherContext';\nimport ErrorBoundary from '../ErrorBoundary/ErrorBoundary';\nimport LoadingSpinner from '../LoadingSpinner/LoadingSpinner';\n\nconst Radar = () => {\n    \"use memo\"; // Enable React Compiler optimization\n    \n    const { coordinates } = useWeather();\n    \n    // Calculate adjusted coordinates once when data changes\n    const adjustedCoordinates = useMemo(() => {\n        if (!coordinates.latitude || !coordinates.longitude) {\n            return null;\n        }\n        const adjustedLatitude = coordinates.latitude - 0.05;\n        const adjustedLongitude = coordinates.longitude - 0.011;\n        return { lat: adjustedLatitude, lon: adjustedLongitude };\n    }, [coordinates.latitude, coordinates.longitude]);\n    \n    // Build the iframe URL once when coordinates change\n    const iframeUrl = useMemo(() => {\n        if (!adjustedCoordinates) {\n            return '';\n        }\n        const { lat, lon } = adjustedCoordinates;\n        return `https://embed.windy.com/embed2.html?lat=${lat}&lon=${lon}&detailLat=${lat}&detailLon=${lon}&width=650&height=750&zoom=9&level=surface&overlay=rain&product=ecmwf&menu=&message=true&marker=&calendar=now&pressure=&type=map&location=coordinates&detail=&metricWind=default&metricTemp=%C2%B0F&radarRange=-1`;\n    }, [adjustedCoordinates]);\n    \n    // Early return if no data is available\n    if (!adjustedCoordinates) {\n        return (\n            <LoadingSpinner\n                size=\"medium\"\n                message=\"Loading radar...\"\n                className=\"radar-loading\"\n            />\n        );\n    }\n    \n    return (\n        <div className=\"radar container-fluid\">\n            <h5 className=\"radar_text\">Current Radar:</h5>\n            <iframe\n                title=\"Weather Radar\"\n                id=\"radar\"\n                src={iframeUrl}\n                frameBorder=\"0\"\n                loading=\"lazy\"\n                aria-label=\"Interactive weather radar map\"\n            ></iframe>\n        </div>\n    );\n};\n\n// Wrap with ErrorBoundary for better error handling\nconst RadarWithErrorBoundary = () => (\n    <ErrorBoundary fallback={<div className=\"error-container\"><h3>Unable to load radar</h3></div>}>\n        <Radar />\n    </ErrorBoundary>\n);\n\nexport default RadarWithErrorBoundary;\n"],"names":["Radar","coordinates","useWeather","adjustedCoordinates","useMemo","latitude","longitude","lat","lon","iframeUrl","concat","_jsxs","className","children","_jsx","title","id","src","frameBorder","loading","LoadingSpinner","size","message","ErrorBoundary","fallback"],"sourceRoot":""}