{"version":3,"file":"static/js/750.1300a527.chunk.js","mappings":"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","sources":["components/LocationSearch/LocationSearch.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\nimport './LocationSearch.css';\n\nconst LocationSearch = ({ onLocationSelect, className = '' }) => {\n  const [query, setQuery] = useState('');\n  const [suggestions, setSuggestions] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [isOpen, setIsOpen] = useState(false);\n  const searchRef = useRef(null);\n  const timeoutRef = useRef(null);\n\n  const API_KEY = process.env.REACT_APP_WEATHER_API_KEY;\n\n  // Debounced search function\n  const searchLocations = async (searchQuery) => {\n    if (!searchQuery.trim() || !API_KEY) {\n      setSuggestions([]);\n      return;\n    }\n\n    setIsLoading(true);\n    try {\n      const response = await fetch(\n        `https://api.openweathermap.org/geo/1.0/direct?q=${encodeURIComponent(searchQuery)}&limit=5&appid=${API_KEY}`\n      );\n\n      if (response.ok) {\n        const data = await response.json();\n        const formattedSuggestions = data.map(location => ({\n          name: location.name,\n          state: location.state,\n          country: location.country,\n          lat: location.lat,\n          lon: location.lon,\n          displayName: `${location.name}${location.state ? `, ${location.state}` : ''}, ${location.country}`\n        }));\n        setSuggestions(formattedSuggestions);\n        setIsOpen(true);\n      } else {\n        setSuggestions([]);\n      }\n    } catch (error) {\n      console.error('Error searching locations:', error);\n      setSuggestions([]);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  // Handle input change with debouncing\n  const handleInputChange = (e) => {\n    const value = e.target.value;\n    setQuery(value);\n\n    // Clear previous timeout\n    if (timeoutRef.current) {\n      clearTimeout(timeoutRef.current);\n    }\n\n    // Set new timeout for debounced search\n    timeoutRef.current = setTimeout(() => {\n      searchLocations(value);\n    }, 300);\n  };\n\n  // Handle location selection\n  const handleLocationSelect = (location) => {\n    setQuery(location.displayName);\n    setSuggestions([]);\n    setIsOpen(false);\n    onLocationSelect({\n      latitude: location.lat,\n      longitude: location.lon,\n      township: location.displayName\n    });\n  };\n\n  // Handle input focus\n  const handleFocus = () => {\n    if (suggestions.length > 0) {\n      setIsOpen(true);\n    }\n  };\n\n  // Handle input blur\n  const handleBlur = () => {\n    // Delay closing to allow for suggestion clicks\n    setTimeout(() => {\n      setIsOpen(false);\n    }, 200);\n  };\n\n  // Handle form submission\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (suggestions.length > 0) {\n      handleLocationSelect(suggestions[0]);\n    }\n  };\n\n  // Close suggestions when clicking outside\n  useEffect(() => {\n    const handleClickOutside = (event) => {\n      if (searchRef.current && !searchRef.current.contains(event.target)) {\n        setIsOpen(false);\n      }\n    };\n\n    document.addEventListener('mousedown', handleClickOutside);\n    return () => {\n      document.removeEventListener('mousedown', handleClickOutside);\n      if (timeoutRef.current) {\n        clearTimeout(timeoutRef.current);\n      }\n    };\n  }, []);\n\n  return (\n    <div className={`location-search ${className}`} ref={searchRef}>\n      <form onSubmit={handleSubmit} className=\"search-form\">\n        <div className=\"search-input-container\">\n          <input\n            type=\"text\"\n            value={query}\n            onChange={handleInputChange}\n            onFocus={handleFocus}\n            onBlur={handleBlur}\n            placeholder=\"Search for a city...\"\n            className=\"search-input\"\n            autoComplete=\"off\"\n          />\n          <div className=\"search-icon\">\n            {isLoading ? (\n              <div className=\"search-spinner\"></div>\n            ) : (\n              <span>üîç</span>\n            )}\n          </div>\n        </div>\n      </form>\n\n      {isOpen && suggestions.length > 0 && (\n        <div className=\"suggestions-dropdown\">\n          {suggestions.map((suggestion, index) => (\n            <div\n              key={index}\n              className=\"suggestion-item\"\n              onClick={() => handleLocationSelect(suggestion)}\n            >\n              <div className=\"suggestion-name\">{suggestion.name}</div>\n              <div className=\"suggestion-details\">\n                {suggestion.state && `${suggestion.state}, `}{suggestion.country}\n              </div>\n            </div>\n          ))}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default LocationSearch;\n"],"names":["_ref","onLocationSelect","_ref$className","className","_useState","useState","_useState2","_slicedToArray","query","setQuery","_useState3","_useState4","suggestions","setSuggestions","_useState5","_useState6","isLoading","setIsLoading","_useState7","_useState8","isOpen","setIsOpen","searchRef","useRef","timeoutRef","API_KEY","process","searchLocations","_ref2","_asyncToGenerator","_regenerator","m","_callee","searchQuery","response","data","formattedSuggestions","_t","w","_context","p","n","trim","a","fetch","concat","encodeURIComponent","v","ok","json","map","location","name","state","country","lat","lon","displayName","console","error","f","_x","apply","arguments","handleLocationSelect","latitude","longitude","township","useEffect","handleClickOutside","event","current","contains","target","document","addEventListener","removeEventListener","clearTimeout","_jsxs","ref","children","_jsx","onSubmit","e","preventDefault","length","type","value","onChange","setTimeout","onFocus","onBlur","placeholder","autoComplete","suggestion","index","onClick"],"sourceRoot":""}